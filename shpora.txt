# mysql -u root -p
на запрос пароля нажмем Enter, пароль не прописан

#mysql -u dba -p
на запрос пароля наберем sql , нажмем Enter (пользователь dba пароль sql)

#mysql -h 127.0.0.1 -u dba -psql cablemaster
подключились к базе cablemaster, можно давать sql запросы

>show tables;
смотрим таблицы в базе

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Для соединения в муфте ConnBetweenConnection
При подключении таблицы имеем два массива: LTable и RTable
подключаем один из них, не задействованый. Если оба свободны, то LTable
проверим в них поле label - будем использовать для указания куда подключен этот конец кабеля, будем писать:
IDFeature (куда подключаемся);IDТаблицы (к которой подключаемся)
Если поле null то никуда не подключено
При сохранении муфты будем обходить таблицы, в каждой строке создавать сначала новое внутреннее соединение.
Создаем вспомогательный массив заносим в него данные таблицы, соотносим данные поля description этого массива и label массива LTable
Если получилось соответствие, создадим новое внешнее соединение.
начинаем делать в строке 720 createfeature.jsp
проверяем если это муфта сохраняем также внешние соединения строка 580
Дорабатываем функцию saveBetweenConnIfPoint(propertyId) строка 1159

В массиве arrAddInsideFeature таблица имеет поле 4 (label), в нем: "ID муфты к которой присоединен кабель;ID таблицы, к которой присоединяется кабель"
В цикле проходим массив arrAddInsideFeature, в нем цикл массивов строк таблицы: если длина этого поля 4 больше 1-го (имеется таблица к которой он присоединен)
то берем эту вторую часть (ID таблицы) и индекс массива (это номер строки), и запускаем цикл обхода массива arrConnInsideFeature,
в нем хранятся массивы строк всех таблиц на странице.
Там в 3-м поле (description) хранится "ID таблицы;номер строки в таблице". Когда совпадает и ID и номер строки из массива arrAddInsideFeature то берем
0-й элемент массива (это ID строки) и добавляем в таблицу ConnBetweenFeature

В поле description таблицы ConnBetweenFeature находится ID муфты где происходит соединение.

При подключении RestClient в Firefox-e устанавливаем Headers -> Custom header:
Name: Content-Type
Attribute value: application/json
Okay

Доделываем функцию TrassaById() в insidefeature.jsp

делаем createfeature.jsp
Когда исполняем saveAll в случае если записей с таким propertyId больше 0 сохраняем изменения.
getCountInsideRows формирует массив arrConnInsideFeature со строками скачанными из базы.
Так же формирует массив строк из текущей странички arrUpdateInsideFeature.
Сравним эти массивы и добавим в базу недостающие строки.
После этого получим массив соединений который был в базе и в текущей таблице. Сделаем Update на отличающиеся строки.
Получили массив разницу, Делаем updateConnInsideIfExist()